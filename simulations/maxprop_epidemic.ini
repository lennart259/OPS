[General]
network = OPSNetwork



#simulation control parameters
sim-time-limit = 2d #604800s # 7 days
repeat = 1

# RNG initialization
num-rngs = 6
seed-0-mt = 1000   # left specifically unused for "unknown" RNG uses
seed-1-mt = 2000   # application
seed-2-mt = 3000   # user behaviour model RNG
seed-3-mt = 4000   # forwarding RNG
seed-4-mt = 5000   # link layer RNG
seed-5-mt = 6000   # mobility RNG



# results location
result-dir = results/
output-vector-file = "${resultdir}/${inifile}-${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${inifile}-${configname}-${runnumber}.sca"


# statistic collection
**.vector-recording = true
**.scalar-recording = true
**.statistic-recording = true



# network parameters
**.numNodes = 200


[Config Messenger-Epidemic-Specific-Dest-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 100s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1
**.app.specificDestination = false 
# hopefully the flag "isDestinaionOriented" is always true then 
# **.app.specificDestinationNodeName = "host[0]"



# forwarding layer parameters
**.forwardingLayer = "KEpidemicRoutingLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 3000m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 5
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5




[Config Messenger-MaxProp-Specific-Dest-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 100s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1
**.app.specificDestination = false
#**.app.specificDestinationNodeName = "host[0]"



# forwarding layer parameters
**.forwardingLayer = "KMaxPropRoutingLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3
**.forwarding.ackTtl = 25




# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 200
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config TestL-Messenger-MaxProp-Specific-Dest-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 2s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1
**.app.specificDestination = true
**.app.specificDestinationNodeName = "host[0]"



# forwarding layer parameters
**.forwardingLayer = "KMaxPropRoutingLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3
**.forwarding.bytesMsg = 80128 #bit
**.forwarding.bandwidthBitRate = 100000 #bps # 100 Kbps



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 20m
**.constraintAreaMaxY = 20m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 2
**.mobility.Hosts = 2
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 2m
**.mobility.speed = 0.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5
